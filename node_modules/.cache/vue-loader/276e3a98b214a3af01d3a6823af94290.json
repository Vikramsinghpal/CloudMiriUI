{"remainingRequest":"E:\\CloudMiriUI\\cloudmiriui\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\CloudMiriUI\\cloudmiriui\\src\\components\\Application.vue?vue&type=template&id=b02fc960&","dependencies":[{"path":"E:\\CloudMiriUI\\cloudmiriui\\src\\components\\Application.vue","mtime":1614070394777},{"path":"E:\\CloudMiriUI\\cloudmiriui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\CloudMiriUI\\cloudmiriui\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\CloudMiriUI\\cloudmiriui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\CloudMiriUI\\cloudmiriui\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}